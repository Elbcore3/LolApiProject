<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>written = 0;
champind = "";
summonername = "";
champs = ds_map_create();
list = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (written==1) {
list = wc_get_top_champs();
for (i=1;i&lt;array_height_2d(output.r);i++) {
if (output.r[i,0].object_index==data_colorstring) {
if (output.r[i,0].text==summonername) {
if((ds_map_size(champs)&gt;0)&amp;&amp;(ds_list_size(list)&gt;0)) {
output.r[i,4] = new_colorstring(get_champname_id(real(ds_list_find_value(list,0)))+"# ("+string(ds_map_find_value(champs,string(ds_list_find_value(list,0))).championwins)+"W-"+string(ds_map_find_value(champs,string(ds_list_find_value(list,0))).championlosses)+"L)",c_dkgray);
}
if((ds_map_size(champs)&gt;1)&amp;&amp;(ds_list_size(list)&gt;1)) {
output.r[i,5] = new_colorstring(get_champname_id(real(ds_list_find_value(list,1)))+"# ("+string(ds_map_find_value(champs,string(ds_list_find_value(list,1))).championwins)+"W-"+string(ds_map_find_value(champs,string(ds_list_find_value(list,1))).championlosses)+"L)",c_dkgray);
}
if((ds_map_size(champs)&gt;2)&amp;&amp;(ds_list_size(list)&gt;2)) {
output.r[i,6] = new_colorstring(get_champname_id(real(ds_list_find_value(list,2)))+"# ("+string(ds_map_find_value(champs,string(ds_list_find_value(list,2))).championwins)+"W-"+string(ds_map_find_value(champs,string(ds_list_find_value(list,2))).championlosses)+"L)",c_dkgray);
}
if((ds_map_size(champs)&gt;3)&amp;&amp;(ds_list_size(list)&gt;3)) {
output.r[i,7] = new_colorstring(get_champname_id(real(ds_list_find_value(list,3)))+"# ("+string(ds_map_find_value(champs,string(ds_list_find_value(list,3))).championwins)+"W-"+string(ds_map_find_value(champs,string(ds_list_find_value(list,3))).championlosses)+"L)",c_dkgray);
}
if((ds_map_size(champs)&gt;4)&amp;&amp;(ds_list_size(list)&gt;4)) {
output.r[i,8] = new_colorstring(get_champname_id(real(ds_list_find_value(list,4)))+"# ("+string(ds_map_find_value(champs,string(ds_list_find_value(list,4))).championwins)+"W-"+string(ds_map_find_value(champs,string(ds_list_find_value(list,4))).championlosses)+"L)",c_dkgray);
}
}
}
}
written=2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
